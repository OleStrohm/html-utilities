"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const path = require("path");
function* searchLocations(baseDir, resource) {
    let next = baseDir;
    let prev = '';
    while (prev !== next && path.basename(next) !== 'node_modules') {
        yield path.join(next, resource);
        prev = next;
        next = path.join(next, '../');
    }
}
function resolveResource(baseDir, fileName) {
    for (const location of searchLocations(baseDir, fileName)) {
        if (fs.existsSync(location)) {
            return location;
        }
    }
    return undefined;
}
function resolveConfig(baseDir) {
    const location = resolveResource(baseDir, 'tsconfig.json');
    if (location !== undefined) {
        try {
            const contents = fs.readFileSync(location).toString();
            const json = JSON.parse(contents);
            if (typeof json.compilerOptions === 'object') {
                return json.compilerOptions;
            }
        }
        catch (err) {
            console.error(`Failed to parse tsconfig located at ${location}.\n
Is your configuration file properly formatted JSON?. Error message was:
\n${err.message}`);
        }
    }
    return {};
}
exports.resolveConfig = resolveConfig;
function resolveTranspiler(baseDir) {
    const location = resolveResource(baseDir, 'node_modules');
    try {
        const transpiler = require(`${location}/typescript`);
        return transpiler;
    }
    catch (err) {
        console.error(`Failed to load transpiler for directory ${baseDir}.\n
Do you have TypeScript installed as a peerDependency? Error message was:
\n${err.message}`);
        return undefined;
    }
}
exports.resolveTranspiler = resolveTranspiler;
